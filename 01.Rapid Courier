import java.util.*;
import java.util.stream.Collectors;

public class _01_Rapid_Courier
{
    public static void main(String[] args)
    {
        Scanner scanner = new Scanner(System.in);
        List<Integer> weights = Arrays.stream(scanner.nextLine().split(" "))
                .map(Integer::parseInt).collect(Collectors.toList());
        List<Integer> capacities = Arrays.stream(scanner.nextLine().split(" "))
                .map(Integer::parseInt).collect(Collectors.toList());
       Collections.reverse(weights);
       int totalWeight = 0;
       while(!weights.isEmpty() && !capacities.isEmpty())
       {
           if(capacities.getFirst() >= weights.getFirst())
           {
               totalWeight += weights.getFirst();
               if(capacities.getFirst() > weights.getFirst())
               {
                   int current = capacities.getFirst() - 2 * weights.getFirst();
                   if(current > 0)
                   {
                       capacities.removeFirst();
                       capacities.addFirst(current);
                   }
                   else
                   {
                       capacities.removeFirst();
                   }
               }
               else
               {
                   capacities.removeFirst();
               }

               weights.removeFirst();
           }
           else
           {
               int current = weights.getFirst() - capacities.getFirst();
               totalWeight += capacities.getFirst();
               weights.removeFirst();
               weights.addFirst(current);
               capacities.removeFirst();

           }
       }
       System.out.printf("Total weight: %d kg%n", totalWeight);
       if(weights.isEmpty() && capacities.isEmpty())
       {
           System.out.println("Congratulations, all packages were delivered successfully by the couriers today.");
       }
       else if(capacities.isEmpty())
       {

           List<String> temp = new ArrayList<>();
           while(!weights.isEmpty())
           {
               temp.add(String.valueOf(weights.getFirst()));
               weights.removeFirst();
           }
           Collections.reverse(temp);
           System.out.println("Unfortunately, there are no more available couriers to deliver the following packages: " +
                   String.join(", ", temp));
       }
       else
       {
           List<String> temp = new ArrayList<>();
           while(!capacities.isEmpty())
           {
               temp.add(String.valueOf(capacities.getFirst()));
               capacities.removeFirst();
           }
           System.out.println("Couriers are still on duty: " +
                   String.join(", ", temp) + " but there are no more packages to deliver.");
       }
    }


}
